#!usr/bin/python
import numpy as np
import argparse
import os
import sys
#sys.path.append('..')
from panstarrs import *

parser = argparse.ArgumentParser(description="""visualize downloaded
                                panstarrs images""",
                usage='use "%(prog)s --help" for more information',
                formatter_class=argparse.RawTextHelpFormatter)
parser.add_argument('epic', help='EPIC ID of target star (e.g. 211319617)',type=int)
parser.add_argument('folder', help='fname (.fits) or folder name', type=str)
parser.add_argument('-a', '--aper', help='K2 aperture radius used in photometry',
    type=np.array, default=None)
parser.add_argument('-s', '--save', help='save figure', action='store_true')
parser.add_argument('-f', '--fmt', help='figure format (pdf|png)', default='pdf')
parser.add_argument('-cm', '--cmap', help='color map (gray|viridis)', default='gray')
parser.add_argument('-co', '--con', help='contrast [0,1]', type=float, default=0.25)
parser.add_argument('-m', '--mark', help='add cross mark to centroid', action='store_true')

args = parser.parse_args()
epic = int(args.epic)
foldername = args.folder
cmap = args.cmap
contrast = args.con
filters = foldername.split('_')[-1]
savefig = args.save
fmt = args.fmt
aperture = args.aper
show_centroid = args.mark

A4_size=(8.27,11.69)

#naming convention of downloaded images by `panstarrs.fetch_data`
newfoldername = str(epic)+'_'+str(filters)

file_list = get_fnames(foldername)

kwargs = {'textloc':(30,40),'fontsize':14, 'pad': 2, 'cmap': cmap,
          'contrast': contrast, 'figsize': (10,15)}

if len(file_list) > 1:
  fig = plot_multi(file_list,epic,aperture=aperture,kwargs=kwargs,show_centroid=show_centroid)
  if savefig:
    fname=os.path.join(foldername,str(epic)+'_'+filters+'.{}'.format(fmt))
    fig.savefig(fname, format=fmt, bbox_inches='tight')
else:
  img, hdr = get_data(file_list)
  filter = hdr['HIERARCH FPA.FILTER']
  band = filter.split('.')[0]
  fig = plot(img,hdr,epic,aperture=aperture,kwargs=kwargs,show_centroid=show_centroid)
  if savefig:
    fname=os.path.join(foldername,str(epic)+'_'+filters+'.{}'.format(fmt))
    fig.savefig(fname, format=fmt, bbox_inches='tight')
